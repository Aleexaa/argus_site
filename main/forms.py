from django import forms
from .models import Request, Service, Client


class RequestForm(forms.ModelForm):
    company_name = forms.CharField(
        max_length=255, label="–ù–∞–∑–≤–∞–Ω–∏–µ –∫–æ–º–ø–∞–Ω–∏–∏"
    )
    contact_person = forms.CharField(
        max_length=255, label="–ö–æ–Ω—Ç–∞–∫—Ç–Ω–æ–µ –ª–∏—Ü–æ", required=False
    )
    phone = forms.CharField(
        max_length=20, label="–¢–µ–ª–µ—Ñ–æ–Ω"
    )
    email = forms.EmailField(
        label="Email", required=False
    )
    object_type = forms.CharField(
        max_length=100, label="–¢–∏–ø –æ–±—ä–µ–∫—Ç–∞"
    )
    object_address = forms.CharField(
        widget=forms.Textarea(attrs={'rows': 2}),
        label="–ê–¥—Ä–µ—Å –æ–±—ä–µ–∫—Ç–∞", required=False
    )
    area = forms.DecimalField(
        label="–ü–ª–æ—â–∞–¥—å, –º¬≤", required=False
    )
    description = forms.CharField(
        widget=forms.Textarea(attrs={
            'rows': 4,
            'placeholder': '–û–ø–∏—à–∏—Ç–µ –∑–∞–¥–∞—á—É, –æ–±—ä–µ–∫—Ç, –æ—Å–æ–±–µ–Ω–Ω–æ—Å—Ç–∏ –ø—Ä–æ–µ–∫—Ç–∞...'
        }),
        label="–û–ø–∏—Å–∞–Ω–∏–µ –∑–∞–¥–∞—á–∏",
        required=False
    )
    attached_file = forms.FileField(
        label="üìé –ü—Ä–∏–∫—Ä–µ–ø–∏—Ç—å —Ñ–∞–π–ª (PDF, DOCX –∏ —Ç.–¥.)", required=False
    )

    services = forms.ModelMultipleChoiceField(
        queryset=Service.objects.none(),
        widget=forms.CheckboxSelectMultiple,
        label="–í—ã–±–µ—Ä–∏—Ç–µ —É—Å–ª—É–≥–∏",
        required=False
    )

    class Meta:
        model = Request
        fields = [
            'company_name', 'contact_person', 'phone', 'email',
            'object_type', 'object_address', 'area',
            'description', 'services', 'attached_file'
        ]

    def __init__(self, *args, **kwargs):
        super().__init__(*args, **kwargs)
        # –ó–∞–≥—Ä—É–∂–∞–µ–º —É—Å–ª—É–≥–∏ —Ç–æ–ª—å–∫–æ —Å –ö–ü (–µ—Å–ª–∏ —ç—Ç–æ –±–∏–∑–Ω–µ—Å-–ª–æ–≥–∏–∫–∞)
        self.fields['services'].queryset = Service.objects.filter(has_kp=True)

    def clean_phone(self):
        """–ü—Ä–∏–≤–æ–¥–∏–º —Ç–µ–ª–µ—Ñ–æ–Ω –∫ –Ω–æ—Ä–º–∞–ª–∏–∑–æ–≤–∞–Ω–Ω–æ–º—É –≤–∏–¥—É."""
        import re
        phone = self.cleaned_data.get('phone', '').strip()
        norm = re.sub(r'[^\d+]', '', phone)
        if not norm:
            raise forms.ValidationError("–í–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞.")
        return norm

    def save(self, commit=True):
        """
        –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ñ–æ—Ä–º—É:
        1Ô∏è‚É£ —Å–æ–∑–¥–∞—ë–º –∏–ª–∏ –Ω–∞—Ö–æ–¥–∏–º –∫–ª–∏–µ–Ω—Ç–∞;
        2Ô∏è‚É£ —Å–æ–∑–¥–∞—ë–º –∑–∞—è–≤–∫—É (Request) –∏ —Å–≤—è–∑—ã–≤–∞–µ–º –µ—ë —Å –∫–ª–∏–µ–Ω—Ç–æ–º;
        3Ô∏è‚É£ –¥–æ–±–∞–≤–ª—è–µ–º –≤—ã–±—Ä–∞–Ω–Ω—ã–µ —É—Å–ª—É–≥–∏.
        """
        data = self.cleaned_data

        # === –ö–ª–∏–µ–Ω—Ç ===
        client, created = Client.objects.get_or_create(
            company_name=data['company_name'].strip(),
            defaults={
                'contact_person': data.get('contact_person', ''),
                'phone': data.get('phone', ''),
                'email': data.get('email', ''),
            }
        )

        # –ï—Å–ª–∏ –∫–ª–∏–µ–Ω—Ç —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç ‚Äî –æ–±–Ω–æ–≤–ª—è–µ–º –µ–≥–æ –∫–æ–Ω—Ç–∞–∫—Ç—ã
        if not created:
            updated = False
            for field in ['contact_person', 'phone', 'email']:
                if data.get(field) and getattr(client, field) != data.get(field):
                    setattr(client, field, data.get(field))
                    updated = True
            if updated:
                client.save()

        # === –ó–∞—è–≤–∫–∞ ===
        request = Request(
            client=client,
            object_type=data.get('object_type', ''),
            object_address=data.get('object_address', ''),
            area=data.get('area'),
            description=data.get('description', ''),
            attached_file=data.get('attached_file'),
            status='new'
        )

        if commit:
            request.save()
            if data.get('services'):
                request.services.set(data['services'])

        return request
