# Generated by Django 4.2 on 2025-10-15 14:55

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Client',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('company_name', models.CharField(max_length=255, verbose_name='Название компании')),
                ('contact_person', models.CharField(blank=True, max_length=255, null=True, verbose_name='Контактное лицо')),
                ('phone', models.CharField(max_length=50, verbose_name='Телефон')),
                ('email', models.EmailField(blank=True, max_length=254, null=True, verbose_name='Email')),
                ('telegram_id', models.BigIntegerField(blank=True, null=True, verbose_name='Telegram ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='Project',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255, verbose_name='Название проекта')),
                ('description', models.TextField(verbose_name='Описание')),
                ('object_type', models.CharField(choices=[('residential', 'Жилые'), ('commercial', 'Коммерческие'), ('industrial', 'Промышленные'), ('medical', 'Медицинские'), ('sports', 'Спортивные'), ('other', 'Прочие')], default='other', max_length=50, verbose_name='Тип объекта')),
                ('address', models.CharField(blank=True, max_length=255, null=True, verbose_name='Адрес')),
                ('image', models.ImageField(blank=True, null=True, upload_to='projects/', verbose_name='Изображение проекта')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='Request',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('object_type', models.CharField(max_length=100, verbose_name='Тип объекта')),
                ('object_address', models.TextField(blank=True, null=True, verbose_name='Адрес объекта')),
                ('area', models.DecimalField(blank=True, decimal_places=2, max_digits=12, null=True, verbose_name='Площадь, м²')),
                ('status', models.CharField(choices=[('new', 'Новая'), ('in_progress', 'В работе'), ('kp_ready', 'КП готово'), ('closed', 'Закрыта')], default='new', max_length=50, verbose_name='Статус')),
                ('attached_file', models.FileField(blank=True, null=True, upload_to='kp_files/', verbose_name='Прикрепленный файл')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('client', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='requests', to='main.client', verbose_name='Клиент')),
                ('responsible_manager', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, verbose_name='Менеджер')),
            ],
        ),
        migrations.CreateModel(
            name='Service',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='Услуга')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Описание')),
                ('base_price', models.DecimalField(blank=True, decimal_places=2, max_digits=12, null=True, verbose_name='Базовая цена')),
                ('has_kp', models.BooleanField(default=False, verbose_name='Включать в КП')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='RequestService',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('request', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.request')),
                ('service', models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, to='main.service')),
            ],
            options={
                'unique_together': {('request', 'service')},
            },
        ),
        migrations.AddField(
            model_name='request',
            name='services',
            field=models.ManyToManyField(through='main.RequestService', to='main.service', verbose_name='Услуги'),
        ),
        migrations.CreateModel(
            name='Notification',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('channel', models.CharField(choices=[('telegram', 'Telegram'), ('email', 'Email')], max_length=50)),
                ('message', models.TextField()),
                ('sent_at', models.DateTimeField(auto_now_add=True)),
                ('status', models.CharField(default='sent', max_length=50)),
                ('client', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='main.client')),
                ('request', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='main.request')),
            ],
        ),
        migrations.CreateModel(
            name='ManagerComment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('comment', models.TextField(verbose_name='Комментарий')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('manager_user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('request', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='comments', to='main.request')),
            ],
        ),
    ]
