# main/views.py
from django.shortcuts import render, redirect
from django.contrib import messages
from .models import Client, Request, RequestService, Service, Project
from .forms import RequestForm
from django.core.mail import send_mail
from django.conf import settings

def home(request):
    services = Service.objects.all()[:8]
    featured_projects = Project.objects.all()[:3]
    context = {
        'services': services,
        'featured_projects': featured_projects
    }
    return render(request, 'main/home.html', context)


def partners(request):
    partners_list = [
        {'name': '–¢–µ—Ö–Ω–æ–ü—Ä–æ—Ñ–∏', 'description': '–û—Ñ–∏—Ü–∏–∞–ª—å–Ω—ã–π –ø–∞—Ä—Ç–Ω–µ—Ä'},
        {'name': '–°—Ç—Ä–æ–π–ì–∞—Ä–∞–Ω—Ç', 'description': '–ù–∞–¥–µ–∂–Ω—ã–π –ø–æ—Å—Ç–∞–≤—â–∏–∫'},
        {'name': '–≠–Ω–µ—Ä–≥–æ–°–µ—Ä–≤–∏—Å', 'description': '–¢–µ—Ö–Ω–æ–ª–æ–≥–∏—á–µ—Å–∫–∏–π –ø–∞—Ä—Ç–Ω–µ—Ä'},
        {'name': '–ë–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å+', 'description': '–≠–∫—Å–ø–µ—Ä—Ç—ã –≤ –°–û–£–≠'},
    ]
    return render(request, 'main/partners.html', {'partners': partners_list})


def about(request):
    stats = [
        {'value': '20+', 'label': '–ª–µ—Ç –Ω–∞ —Ä—ã–Ω–∫–µ', 'icon': 'award'},
        {'value': '500+', 'label': '—Ä–µ–∞–ª–∏–∑–æ–≤–∞–Ω–Ω—ã—Ö –ø—Ä–æ–µ–∫—Ç–æ–≤', 'icon': 'target'},
        {'value': '100+', 'label': '–∫–≤–∞–ª–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç–æ–≤', 'icon': 'users'},
        {'value': '98%', 'label': '–¥–æ–≤–æ–ª—å–Ω—ã—Ö –∫–ª–∏–µ–Ω—Ç–æ–≤', 'icon': 'trending-up'},
    ]
    advantages = [
        {'icon': 'shield-check', 'title': '–ù–∞–¥–µ–∂–Ω–æ—Å—Ç—å', 'description': '–í—Å–µ —Ä–∞–±–æ—Ç—ã –≤—ã–ø–æ–ª–Ω—è—é—Ç—Å—è –≤ —Å—Ç—Ä–æ–≥–æ–º —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–∏ —Å –Ω–æ—Ä–º–∞—Ç–∏–≤–∞–º–∏ –∏ —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è–º–∏ –ø–æ–∂–∞—Ä–Ω–æ–π –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏.'},
        {'icon': 'award', 'title': '–û–ø—ã—Ç –∏ —ç–∫—Å–ø–µ—Ä—Ç–∏–∑–∞', 'description': '–ë–æ–ª–µ–µ 20 –ª–µ—Ç —É—Å–ø–µ—à–Ω–æ–π —Ä–∞–±–æ—Ç—ã –≤ —Å—Ñ–µ—Ä–µ –ø–æ–∂–∞—Ä–Ω–æ–π –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏.'},
        {'icon': 'users', 'title': '–ü—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞', 'description': '–ù–∞—à–∏ —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç—ã —Ä–µ–≥—É–ª—è—Ä–Ω–æ –ø—Ä–æ—Ö–æ–¥—è—Ç –æ–±—É—á–µ–Ω–∏–µ –∏ –ø–æ–≤—ã—à–µ–Ω–∏–µ –∫–≤–∞–ª–∏—Ñ–∏–∫–∞—Ü–∏–∏.'},
        {'icon': 'briefcase', 'title': '–ö–æ–º–ø–ª–µ–∫—Å–Ω—ã–π –ø–æ–¥—Ö–æ–¥', 'description': '–ü—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è–µ–º –ø–æ–ª–Ω—ã–π —Ü–∏–∫–ª —É—Å–ª—É–≥: –æ—Ç –ø—Ä–æ–µ–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –¥–æ —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–æ–≥–æ –æ–±—Å–ª—É–∂–∏–≤–∞–Ω–∏—è.'},
    ]
    return render(request, 'main/about.html', {'stats': stats, 'advantages': advantages})


def services(request):
    section1_services = [
        {'id': '1.1', 'title': '–°–∏—Å—Ç–µ–º—ã –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ –ø–æ–∂–∞—Ä–æ—Ç—É—à–µ–Ω–∏—è', 'description': '–ü—Ä–æ–µ–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ, –º–æ–Ω—Ç–∞–∂ –∏ –æ–±—Å–ª—É–∂–∏–≤–∞–Ω–∏–µ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏—Ö —Å–∏—Å—Ç–µ–º –ø–æ–∂–∞—Ä–æ—Ç—É—à–µ–Ω–∏—è (–≤–æ–¥—è–Ω—ã–µ, –ø–æ—Ä–æ—à–∫–æ–≤—ã–µ, –≥–∞–∑–æ–≤—ã–µ, –∞—ç—Ä–æ–∑–æ–ª—å–Ω—ã–µ).'},
        {'id': '1.2', 'title': '–ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è –ø–æ–∂–∞—Ä–Ω–∞—è —Å–∏–≥–Ω–∞–ª–∏–∑–∞—Ü–∏—è', 'description': '–£—Å—Ç–∞–Ω–æ–≤–∫–∞ —Å–æ–≤—Ä–µ–º–µ–Ω–Ω—ã—Ö —Å–∏—Å—Ç–µ–º –æ–ø–æ–≤–µ—â–µ–Ω–∏—è –∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —ç–≤–∞–∫—É–∞—Ü–∏–µ–π –ª—é–¥–µ–π –ø—Ä–∏ –ø–æ–∂–∞—Ä–µ.'},
        {'id': '1.3', 'title': '–≠–ª–µ–∫—Ç—Ä–æ–º–æ–Ω—Ç–∞–∂–Ω—ã–µ —Ä–∞–±–æ—Ç—ã', 'description': '–ü–æ–ª–Ω—ã–π –∫–æ–º–ø–ª–µ–∫—Å —ç–ª–µ–∫—Ç—Ä–æ–º–æ–Ω—Ç–∞–∂–Ω—ã—Ö —Ä–∞–±–æ—Ç: –≤–Ω—É—Ç—Ä–µ–Ω–Ω–∏–µ –∏ –Ω–∞—Ä—É–∂–Ω—ã–µ —Å–µ—Ç–∏, –æ—Å–≤–µ—â–µ–Ω–∏–µ, —Å–∏–ª–æ–≤–æ–µ –æ–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏–µ.'},
        {'id': '1.4', 'title': '–°–∏—Å—Ç–µ–º—ã –≤–µ–Ω—Ç–∏–ª—è—Ü–∏–∏ –∏ –∫–æ–Ω–¥–∏—Ü–∏–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è', 'description': '–ü—Ä–æ–µ–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∏ –º–æ–Ω—Ç–∞–∂ —Å–∏—Å—Ç–µ–º –≤–µ–Ω—Ç–∏–ª—è—Ü–∏–∏, –∫–æ–Ω–¥–∏—Ü–∏–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è –∏ –æ—Ç–æ–ø–ª–µ–Ω–∏—è.'},
        {'id': '1.5', 'title': '–û–≥–Ω–µ–∑–∞—â–∏—Ç–∞ —Å—Ç—Ä–æ–∏—Ç–µ–ª—å–Ω—ã—Ö –∫–æ–Ω—Å—Ç—Ä—É–∫—Ü–∏–π', 'description': '–û–≥–Ω–µ–∑–∞—â–∏—Ç–Ω–∞—è –æ–±—Ä–∞–±–æ—Ç–∫–∞ –º–µ—Ç–∞–ª–ª–∏—á–µ—Å–∫–∏—Ö –∏ –¥–µ—Ä–µ–≤—è–Ω–Ω—ã—Ö –∫–æ–Ω—Å—Ç—Ä—É–∫—Ü–∏–π, –≤–æ–∑–¥—É—Ö–æ–≤–æ–¥–æ–≤, –∫–∞–±–µ–ª—å–Ω—ã—Ö –ª–∏–Ω–∏–π.'},
        {'id': '1.6', 'title': '–°–∏—Å—Ç–µ–º—ã –æ–ø–æ–≤–µ—â–µ–Ω–∏—è –∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —ç–≤–∞–∫—É–∞—Ü–∏–µ–π (–°–û–£–≠)', 'description': '–ü—Ä–æ–µ–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∏ –º–æ–Ω—Ç–∞–∂ —Å–∏—Å—Ç–µ–º –æ–ø–æ–≤–µ—â–µ–Ω–∏—è –ª—é–¥–µ–π –æ –ø–æ–∂–∞—Ä–µ –≤—Å–µ—Ö —Ç–∏–ø–æ–≤.'},
        {'id': '1.7', 'title': '–¢–µ—Ö–Ω–∏—á–µ—Å–∫–æ–µ –æ–±—Å–ª—É–∂–∏–≤–∞–Ω–∏–µ —Å–∏—Å—Ç–µ–º –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏', 'description': '–†–µ–≥—É–ª—è—Ä–Ω–æ–µ —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–æ–µ –æ–±—Å–ª—É–∂–∏–≤–∞–Ω–∏–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—ã—Ö —Å–∏—Å—Ç–µ–º.'},
        {'id': '1.8', 'title': '–ú–æ–Ω—Ç–∞–∂ —Å–∏—Å—Ç–µ–º –≤–∏–¥–µ–æ–Ω–∞–±–ª—é–¥–µ–Ω–∏—è –∏ –∫–æ–Ω—Ç—Ä–æ–ª—è –¥–æ—Å—Ç—É–ø–∞', 'description': '–£—Å—Ç–∞–Ω–æ–≤–∫–∞ —Å–æ–≤—Ä–µ–º–µ–Ω–Ω—ã—Ö —Å–∏—Å—Ç–µ–º –≤–∏–¥–µ–æ–Ω–∞–±–ª—é–¥–µ–Ω–∏—è –∏ –°–ö–£–î.'},
    ]

    section2_services = [
        {'id': '2.1', 'title': '–ù–µ–∑–∞–≤–∏—Å–∏–º–∞—è –æ—Ü–µ–Ω–∫–∞ –ø–æ–∂–∞—Ä–Ω–æ–≥–æ —Ä–∏—Å–∫–∞ (–ø–æ–∂–∞—Ä–Ω—ã–π –∞—É–¥–∏—Ç)', 'description': '–≠–∫—Å–ø–µ—Ä—Ç–Ω–∞—è –æ—Ü–µ–Ω–∫–∞ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏—è –æ–±—ä–µ–∫—Ç–∞ —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è–º –ø–æ–∂–∞—Ä–Ω–æ–π –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏.'},
        {'id': '2.2', 'title': '–†–∞–∑—Ä–∞–±–æ—Ç–∫–∞ –ø—Ä–æ–µ–∫—Ç–Ω–æ–π –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏–∏', 'description': '–ü—Ä–æ–µ–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–∏—Å—Ç–µ–º –ø–æ–∂–∞—Ä–Ω–æ–π –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏, —ç–ª–µ–∫—Ç—Ä–æ—Å–Ω–∞–±–∂–µ–Ω–∏—è, –≤–µ–Ω—Ç–∏–ª—è—Ü–∏–∏.'},
        {'id': '2.3', 'title': '–≠–∫—Å–ø–µ—Ä—Ç–∏–∑–∞ –ø—Ä–æ–µ–∫—Ç–Ω–æ–π –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏–∏', 'description': '–ü—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–æ–µ–∫—Ç–Ω–æ–π –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏–∏ –Ω–∞ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–µ –Ω–æ—Ä–º–∞–º –ø–æ–∂–∞—Ä–Ω–æ–π –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏.'},
        {'id': '2.4', 'title': '–ö–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–æ–Ω–Ω—ã–µ —É—Å–ª—É–≥–∏', 'description': '–ö–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–∏ –ø–æ –≤–æ–ø—Ä–æ—Å–∞–º –ø–æ–∂–∞—Ä–Ω–æ–π –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏ –∏ –ø–æ–¥–≥–æ—Ç–æ–≤–∫–µ –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏–∏.'},
    ]

    return render(request, 'main/services.html', {
        'section1_services': section1_services,
        'section2_services': section2_services,
    })


def projects(request):
    projects_list = Project.objects.all()
    object_types = ['all', 'residential', 'commercial', 'industrial', 'medical', 'sports']
    active_filter = request.GET.get('filter', 'all')
    if active_filter != 'all':
        projects_list = projects_list.filter(object_type=active_filter)
    return render(request, 'main/projects.html', {
        'projects': projects_list,
        'active_filter': active_filter,
        'object_types': object_types
    })


def contacts(request):
    if request.method == 'POST':
        name = request.POST.get('name')
        contact = request.POST.get('contact')
        message = request.POST.get('message')
        messages.success(request, '–°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ! –ú—ã —Å–≤—è–∂–µ–º—Å—è —Å –≤–∞–º–∏ –≤ –±–ª–∏–∂–∞–π—à–µ–µ –≤—Ä–µ–º—è.')
        return redirect('contacts')
    return render(request, 'main/contacts.html')


def order_kp(request):
    """
    –û—Ñ–æ—Ä–º–ª–µ–Ω–∏–µ –∫–æ–º–º–µ—Ä—á–µ—Å–∫–æ–≥–æ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è (–ö–ü)
    ‚Äî —Å–æ—Ö—Ä–∞–Ω—è–µ—Ç –∫–ª–∏–µ–Ω—Ç–∞, –∑–∞—è–≤–∫—É –∏ –≤—ã–±—Ä–∞–Ω–Ω—ã–µ —É—Å–ª—É–≥–∏ –≤ –±–∞–∑—É PostgreSQL
    """
    if request.method == 'POST':
        form = RequestForm(request.POST, request.FILES)

        if form.is_valid():
            company_name = form.cleaned_data.get('company_name') or '–ù–µ —É–∫–∞–∑–∞–Ω–æ'
            phone = form.cleaned_data.get('phone') or ''
            email = form.cleaned_data.get('email') or ''
            contact_person = form.cleaned_data.get('contact_person') or ''

            client, created = Client.objects.get_or_create(
                company_name=company_name,
                phone=phone,
                defaults={'contact_person': contact_person, 'email': email}
            )

            new_request = Request.objects.create(
                client=client,
                object_type=form.cleaned_data['object_type'],
                object_address=form.cleaned_data.get('object_address', ''),
                attached_file=form.cleaned_data.get('attached_file'),
                description=form.cleaned_data.get('description', ''),
                status='new',
                responsible_manager=None
            )

            # —Å–æ—Ö—Ä–∞–Ω—è–µ–º –≤—ã–±—Ä–∞–Ω–Ω—ã–µ —É—Å–ª—É–≥–∏
            selected_services = form.cleaned_data.get('services', [])
            for service in selected_services:
                RequestService.objects.create(request=new_request, service=service)

            # —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –ø–æ –ø–æ—á—Ç–µ
            send_mail(
                subject=f"üÜï –ù–æ–≤–∞—è –∑–∞—è–≤–∫–∞ #{new_request.id} –æ—Ç {client.company_name}",
                message=(
                    f"–ü–æ—Å—Ç—É–ø–∏–ª–∞ –Ω–æ–≤–∞—è –∑–∞—è–≤–∫–∞!\n\n"
                    f"–ö–æ–º–ø–∞–Ω–∏—è: {client.company_name}\n"
                    f"–ö–æ–Ω—Ç–∞–∫—Ç: {client.contact_person} ({client.phone})\n"
                    f"Email: {client.email}\n\n"
                    f"–û–ø–∏—Å–∞–Ω–∏–µ:\n{form.cleaned_data.get('description', '‚Äî')}\n\n"
                    f"–ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –≤ CRM: https://argus.local/crm/request/{new_request.id}/"
                ),
                from_email=settings.DEFAULT_FROM_EMAIL,
                recipient_list=["afanaseva.sasha.a@gmail.com"],  # –∏—Å–ø—Ä–∞–≤—å –∞–¥—Ä–µ—Å
                fail_silently=True,
            )

            messages.success(request, "‚úÖ –ó–∞—è–≤–∫–∞ —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞.")
            return redirect('order_success')

        else:
            messages.error(request, "‚ùå –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø—Ä–∞–≤–∏–ª—å–Ω–æ—Å—Ç—å –∑–∞–ø–æ–ª–Ω–µ–Ω–∏—è —Ñ–æ—Ä–º—ã.")
    else:
        form = RequestForm()

    services = Service.objects.filter(has_kp=True).order_by('id')
    selected_services = request.POST.getlist('services') if request.method == 'POST' else []

    return render(request, 'main/order_kp.html', {
        'form': form,
        'services': services,
        'selected_services': selected_services,
    })
def order_success(request):
    return render(request, 'main/order_success.html')
