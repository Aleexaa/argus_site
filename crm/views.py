from django.shortcuts import render, get_object_or_404, redirect
from django.contrib.auth.decorators import login_required, user_passes_test
from django.contrib import messages
from django.core.mail import send_mail
from django.conf import settings
from django.contrib.auth import authenticate, login
from crm.models import ManagerProfile, ViewedRequest
from crm.models import Comment as CrmComment
from main.models import Request, Client, Project, ManagerComment
from django.http import JsonResponse, HttpResponse, FileResponse, Http404
from django.template.loader import render_to_string
from django.http import FileResponse
from django.utils import timezone
from datetime import timedelta
import os

def login_view(request):
    if request.method == "POST":
        username = request.POST.get("username")
        password = request.POST.get("password")
        user = authenticate(request, username=username, password=password)
        if user is not None:
            login(request, user)
            return redirect("crm_dashboard")
        else:
            messages.error(request, "–ù–µ–≤–µ—Ä–Ω—ã–π –ª–æ–≥–∏–Ω –∏–ª–∏ –ø–∞—Ä–æ–ª—å")

    return render(request, "crm/login.html")

# ============================================================
# üîê –ü—Ä–æ–≤–µ—Ä–∫–∏ —Ä–æ–ª–µ–π
# ============================================================
def is_owner(user):
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤–ª–∞–¥–µ–ª—å—Ü–µ–º."""
    return hasattr(user, 'managerprofile') and user.managerprofile.role == 'owner'

def is_manager(user):
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –º–µ–Ω–µ–¥–∂–µ—Ä–æ–º."""
    return hasattr(user, 'managerprofile') and user.managerprofile.role == 'manager'

# ============================================================
# üìã –ì–ª–∞–≤–Ω–∞—è –ø–∞–Ω–µ–ª—å (–∑–∞—è–≤–∫–∏)
# ============================================================
@login_required
def dashboard(request):
    """–ì–ª–∞–≤–Ω–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞ CRM ‚Äî –∑–∞—è–≤–∫–∏, –æ–±–Ω–æ–≤–ª—è—é—Ç—Å—è –±–µ–∑ –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∫–∏."""
    print("=== DASHBOARD CALLED ===")
    print("AJAX request:", request.headers.get('x-requested-with'))
    print("User:", request.user)
    
    profile = getattr(request.user, 'managerprofile', None)
    if not profile:
        return redirect('logout')

    # –û–ø—Ä–µ–¥–µ–ª—è–µ–º –Ω–∞–±–æ—Ä –∑–∞—è–≤–æ–∫
    if profile.role == 'owner':
        requests_qs = Request.objects.all().select_related('client', 'responsible_manager').order_by('-created_at')
    else:
        requests_qs = Request.objects.filter(responsible_manager=profile).select_related('client').order_by('-created_at')

    # üîπ –ê–í–¢–û–ú–ê–¢–ò–ß–ï–°–ö–ò –û–¢–ú–ï–ß–ê–ï–ú –í–°–ï –ó–ê–Ø–í–ö–ò –ö–ê–ö –ü–†–û–°–ú–û–¢–†–ï–ù–ù–´–ï –ü–†–ò –ó–ê–ì–†–£–ó–ö–ï –°–¢–†–ê–ù–ò–¶–´
    if not request.headers.get('x-requested-with') == 'XMLHttpRequest':
        for req in requests_qs:
            ViewedRequest.objects.get_or_create(
                user=request.user,
                request=req
            )
        print(f"‚úÖ –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –æ—Ç–º–µ—á–µ–Ω–æ {requests_qs.count()} –∑–∞—è–≤–æ–∫ –∫–∞–∫ –ø—Ä–æ—Å–º–æ—Ç—Ä–µ–Ω–Ω—ã–µ")

    # –§–∏–ª—å—Ç—Ä–∞—Ü–∏—è –ø–æ —Å—Ç–∞—Ç—É—Å—É
    status_filter = request.GET.get('status')
    if status_filter:
        requests_qs = requests_qs.filter(status=status_filter)

    context = {
        'user': request.user,
        'profile': profile,
        'requests': requests_qs,
        'is_owner': profile.role == 'owner',
        'status_filter': status_filter,
    }

    # ‚ö° –ï—Å–ª–∏ –∑–∞–ø—Ä–æ—Å AJAX ‚Äî –≤–æ–∑–≤—Ä–∞—â–∞–µ–º —Ç–æ–ª—å–∫–æ HTML —Å–ø–∏—Å–∫–∞ –∑–∞—è–≤–æ–∫
    if request.headers.get('x-requested-with') == 'XMLHttpRequest':
        print("üîî Returning AJAX response")
        html = render_to_string('crm/partials/requests_list.html', context, request=request)
        return HttpResponse(html)

    print("üìÑ Returning full page")
    return render(request, 'crm/dashboard.html', context)

# ============================================================
# üßæ –ú–æ–∏ –∑–∞—è–≤–∫–∏
# ============================================================
@login_required
def my_requests(request):
    """–û—Ç–¥–µ–ª—å–Ω—ã–π —Ä–∞–∑–¥–µ–ª '–ú–æ–∏ –∑–∞—è–≤–∫–∏'."""
    profile = getattr(request.user, 'managerprofile', None)
    if not profile:
        messages.error(request, "–£ –≤–∞—à–µ–≥–æ –∞–∫–∫–∞—É–Ω—Ç–∞ –Ω–µ—Ç –ø—Ä–æ—Ñ–∏–ª—è –º–µ–Ω–µ–¥–∂–µ—Ä–∞.")
        return redirect('logout')

    if profile.role == 'owner':
        requests = Request.objects.all().order_by('-created_at')
    else:
        requests = Request.objects.filter(responsible_manager=profile).order_by('-created_at')

    return render(request, 'crm/my_requests.html', {
        'user': request.user,
        'profile': profile,
        'requests': requests,
        'is_owner': profile.role == 'owner',
    })

# ============================================================
# üóÇ –î–µ—Ç–∞–ª—å–Ω–∞—è –∫–∞—Ä—Ç–æ—á–∫–∞ –∑–∞—è–≤–∫–∏
# ============================================================
@login_required
def request_detail(request, pk):
    """–ö–∞—Ä—Ç–æ—á–∫–∞ –∑–∞—è–≤–∫–∏ + –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏ + —Å–º–µ–Ω–∞ —Å—Ç–∞—Ç—É—Å–∞."""
    req = get_object_or_404(Request, pk=pk)
    profile = getattr(request.user, 'managerprofile', None)

    if not profile:
        messages.error(request, "–£ –≤–∞—à–µ–≥–æ –∞–∫–∫–∞—É–Ω—Ç–∞ –Ω–µ—Ç –ø—Ä–æ—Ñ–∏–ª—è –º–µ–Ω–µ–¥–∂–µ—Ä–∞.")
        return redirect('crm_dashboard')

    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–∞
    if not is_owner(request.user) and req.responsible_manager != profile:
        messages.error(request, "–£ –≤–∞—Å –Ω–µ—Ç –¥–æ—Å—Ç—É–ø–∞ –∫ —ç—Ç–æ–π –∑–∞—è–≤–∫–µ.")
        return redirect('crm_dashboard')

    # –ú–µ–Ω–µ–¥–∂–µ—Ä—ã –¥–ª—è –≤—ã–ø–∞–¥–∞—é—â–µ–≥–æ —Å–ø–∏—Å–∫–∞
    managers = ManagerProfile.objects.filter(role="manager").select_related("user")

    if request.method == "POST":
        new_status = request.POST.get("status")
        comment_text = request.POST.get("comment")
        new_manager_id = request.POST.get("manager")

        # üîπ –û–±–Ω–æ–≤–ª—è–µ–º –º–µ–Ω–µ–¥–∂–µ—Ä–∞, –µ—Å–ª–∏ –∏–∑–º–µ–Ω–∏–ª—Å—è
        if new_manager_id:
            new_manager_profile = ManagerProfile.objects.filter(id=new_manager_id).first()
            if new_manager_profile and req.responsible_manager != new_manager_profile:
                req.responsible_manager = new_manager_profile
                req.save(update_fields=["responsible_manager"])
                messages.success(
                    request,
                    f"–ú–µ–Ω–µ–¥–∂–µ—Ä –Ω–∞–∑–Ω–∞—á–µ–Ω: {new_manager_profile.user.get_full_name() or new_manager_profile.user.username}"
                )

        # üîπ –û–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–∞—Ç—É—Å –∑–∞—è–≤–∫–∏
        if new_status and new_status != req.status:
            old_status = req.get_status_display()
            req.status = new_status
            req.save(update_fields=["status"])
            _notify_client_status(req)
            messages.success(request, f"–°—Ç–∞—Ç—É—Å –æ–±–Ω–æ–≤–ª—ë–Ω: {old_status} ‚Üí {req.get_status_display()}")

        # üîπ –î–æ–±–∞–≤–ª—è–µ–º –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π
        if comment_text:
            CrmComment.objects.create(request=req, author=profile, text=comment_text)
            messages.success(request, "–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π –¥–æ–±–∞–≤–ª–µ–Ω.")

        # –ï—Å–ª–∏ —ç—Ç–æ AJAX, –≤–æ–∑–≤—Ä–∞—â–∞–µ–º —Ç–æ–ª—å–∫–æ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏
        if request.headers.get("X-Requested-With") == "XMLHttpRequest":
            comments = CrmComment.objects.filter(request=req).select_related('author').order_by('-created_at')
            html = render_to_string("crm/partials/comments_block.html", {"comments": comments}, request=request)
            return HttpResponse(html)

        return redirect('crm_request_detail', pk=req.pk)

    # üîπ –ü–æ–ª—É—á–∞–µ–º –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏
    comments = CrmComment.objects.filter(request=req).select_related('author').order_by('-created_at')

    return render(request, 'crm/request_detail.html', {
        'user': request.user,
        'profile': profile,
        'req': req,
        'comments': comments,
        'managers': managers,
        'is_owner': profile.role == 'owner',
    })
# ============================================================
# ‚úâÔ∏è Email —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
# ============================================================
def _notify_manager_assignment(req):
    if not req.responsible_manager or not req.responsible_manager.corporate_email:
        return

    subject = "üîî –í–∞–º –Ω–∞–∑–Ω–∞—á–µ–Ω–∞ –Ω–æ–≤–∞—è –∑–∞—è–≤–∫–∞"
    message = (
        f"–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ, {req.responsible_manager.user.first_name or req.responsible_manager.user.username}!\n\n"
        f"–í–∞–º –Ω–∞–∑–Ω–∞—á–µ–Ω–∞ –Ω–æ–≤–∞—è –∑–∞—è–≤–∫–∞ –æ—Ç –∫–ª–∏–µ–Ω—Ç–∞ {req.client.company_name}.\n"
        f"–¢–∏–ø –æ–±—ä–µ–∫—Ç–∞: {req.object_type}\n"
        f"–ê–¥—Ä–µ—Å –æ–±—ä–µ–∫—Ç–∞: {req.object_address or '–ù–µ —É–∫–∞–∑–∞–Ω'}\n"
        f"–ü–ª–æ—â–∞–¥—å: {req.area or '–ù–µ —É–∫–∞–∑–∞–Ω–∞'} –º¬≤\n\n"
        f"–ü–µ—Ä–µ–π—Ç–∏ –≤ CRM: http://–≤–∞—à-–¥–æ–º–µ–Ω/crm/request/{req.id}/"
    )
    send_mail(subject, message, settings.DEFAULT_FROM_EMAIL, [req.responsible_manager.corporate_email], fail_silently=True)

def _notify_client_status(req):
    client_email = req.client.email
    if not client_email:
        return

    subject = f"üìÑ –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –ø–æ –≤–∞—à–µ–π –∑–∞—è–≤–∫–µ ({req.client.company_name})"
    message = (
        f"–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ!\n\n"
        f"–°—Ç–∞—Ç—É—Å –≤–∞—à–µ–π –∑–∞—è–≤–∫–∏ –∏–∑–º–µ–Ω—ë–Ω: {req.get_status_display()}.\n"
        f"–ù–∞—à —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç —Å–≤—è–∂–µ—Ç—Å—è —Å –≤–∞–º–∏ –ø—Ä–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏.\n\n"
        f"–° —É–≤–∞–∂–µ–Ω–∏–µ–º,\n–ö–æ–º–ø–∞–Ω–∏—è –ê—Ä–≥—É—Å."
    )
    send_mail(subject, message, settings.DEFAULT_FROM_EMAIL, [client_email], fail_silently=True)

# ============================================================
# üßë‚Äçüíº –ö–ª–∏–µ–Ω—Ç—ã –∏ –ø—Ä–æ–µ–∫—Ç—ã
# ============================================================
@login_required
def clients_list(request):
    profile = request.user.managerprofile
    if is_owner(request.user):
        clients = Client.objects.all().order_by('company_name')
    else:
        clients = Client.objects.filter(project__manager=profile).distinct().order_by('company_name')
    return render(request, 'crm/clients.html', {
        'user': request.user,
        'profile': profile,
        'clients': clients
    })

@login_required
def projects_list(request):
    profile = request.user.managerprofile
    if is_owner(request.user):
        projects = Project.objects.all().select_related('client', 'manager').order_by('-id')
    else:
        projects = Project.objects.filter(manager=profile).select_related('client').order_by('-id')
    return render(request, 'crm/projects.html', {
        'user': request.user,
        'profile': profile,
        'projects': projects
    })

@login_required
def add_project(request):
    if request.method == "POST":
        name = request.POST.get("name")
        description = request.POST.get("description")
        client_id = request.POST.get("client_id")

        if not (name and client_id):
            messages.error(request, "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∑–∞–ø–æ–ª–Ω–∏—Ç–µ –≤—Å–µ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ –ø–æ–ª—è.")
            return redirect('crm_add_project')

        client = get_object_or_404(Client, id=client_id)
        Project.objects.create(
            name=name,
            description=description,
            client=client,
            manager=request.user.managerprofile
        )
        messages.success(request, "–ü—Ä–æ–µ–∫—Ç —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω.")
        return redirect('crm_projects')

    clients = Client.objects.all().order_by('company_name')
    return render(request, 'crm/add_project.html', {
        'user': request.user,
        'profile': request.user.managerprofile,
        'clients': clients
    })

# ============================================================
# üë§ –ü—Ä–æ—Ñ–∏–ª—å
# ============================================================
@login_required
def profile_view(request):
    profile = request.user.managerprofile
    return render(request, 'crm/profile.html', {
        'user': request.user,
        'profile': profile
    })

# ============================================================
# üëî –ú–µ–Ω–µ–¥–∂–µ—Ä—ã (—Ç–æ–ª—å–∫–æ –¥–ª—è –≤–ª–∞–¥–µ–ª—å—Ü–∞)
# ============================================================
@login_required
@user_passes_test(is_owner)
def managers_list(request):
    managers = ManagerProfile.objects.filter(role='manager').select_related('user')
    return render(request, 'crm/managers.html', {
        'user': request.user,
        'profile': request.user.managerprofile,
        'managers': managers
    })

@login_required
def requests_list(request):
    """–°–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –∑–∞—è–≤–æ–∫ —Å –∞–≤—Ç–æ–æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ–º"""
    profile = getattr(request.user, 'managerprofile', None)
    if not profile:
        return redirect('logout')

    # –û–ø—Ä–µ–¥–µ–ª—è–µ–º –Ω–∞–±–æ—Ä –∑–∞—è–≤–æ–∫ - –ò–°–ü–†–ê–í–õ–ï–ù–û!
    if profile.role == 'owner':
        requests_qs = Request.objects.all().select_related('client', 'responsible_manager').order_by('-created_at')
    else:
        requests_qs = Request.objects.filter(responsible_manager=profile).select_related('client').order_by('-created_at')

    # –§–∏–ª—å—Ç—Ä–∞—Ü–∏—è –ø–æ —Å—Ç–∞—Ç—É—Å—É
    status_filter = request.GET.get('status')
    if status_filter:
        requests_qs = requests_qs.filter(status=status_filter)

    context = {
        'user': request.user,
        'profile': profile,
        'requests': requests_qs,
        'is_owner': profile.role == 'owner',
        'status_filter': status_filter,
    }

    # ‚ö° –ï—Å–ª–∏ –∑–∞–ø—Ä–æ—Å AJAX ‚Äî –≤–æ–∑–≤—Ä–∞—â–∞–µ–º —Ç–æ–ª—å–∫–æ HTML —Å–ø–∏—Å–∫–∞ –∑–∞—è–≤–æ–∫
    if request.headers.get('x-requested-with') == 'XMLHttpRequest':
        html = render_to_string('crm/partials/requests_list.html', context, request=request)
        return HttpResponse(html)

    # –û–±—ã—á–Ω–∞—è –∑–∞–≥—Ä—É–∑–∫–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
    return render(request, 'crm/request_list.html', context)

# ============================================================
# üìä –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–æ–≤—ã—Ö –∑–∞—è–≤–æ–∫ (–ò–°–ü–†–ê–í–õ–ï–ù–ù–ê–Ø –í–ï–†–°–ò–Ø)
# ============================================================
# ============================================================
# üìä –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–æ–≤—ã—Ö –∑–∞—è–≤–æ–∫ (–û–ë–ù–û–í–õ–ï–ù–ù–ê–Ø –í–ï–†–°–ò–Ø)
# ============================================================
@login_required
def check_new_requests(request):
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç –Ω–∞–ª–∏—á–∏–µ –ù–ï–ü–†–û–°–ú–û–¢–†–ï–ù–ù–´–• –∑–∞—è–≤–æ–∫ –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –¥–∞–Ω–Ω—ã–µ –æ –Ω–∏—Ö"""
    try:
        user = request.user
        
        # –ü–æ–ª—É—á–∞–µ–º –ø—Ä–æ—Ñ–∏–ª—å –º–µ–Ω–µ–¥–∂–µ—Ä–∞
        profile = getattr(user, 'managerprofile', None)
        if not profile:
            return JsonResponse({
                'unviewed_requests_count': 0,
                'all_requests_count': 0,
                'new_requests': [],
                'last_check': timezone.now().isoformat(),
                'status': 'error',
                'error': 'User has no manager profile'
            })
        
        # –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ –∑–∞—è–≤–∫–∏ –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Ä–æ–ª–∏
        if profile.role == 'owner':
            all_requests = Request.objects.all().select_related('client', 'responsible_manager__user')
        else:
            all_requests = Request.objects.filter(responsible_manager=profile).select_related('client', 'responsible_manager__user')
        
        # –ü–æ–ª—É—á–∞–µ–º ID –≤—Å–µ—Ö –∑–∞—è–≤–æ–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        all_request_ids = list(all_requests.values_list('id', flat=True))
        
        if not all_request_ids:
            return JsonResponse({
                'unviewed_requests_count': 0,
                'all_requests_count': 0,
                'new_requests': [],
                'last_check': timezone.now().isoformat(),
                'status': 'success',
                'user': user.username
            })
        
        # –ü–æ–ª—É—á–∞–µ–º ID –ø—Ä–æ—Å–º–æ—Ç—Ä–µ–Ω–Ω—ã—Ö –∑–∞—è–≤–æ–∫
        viewed_request_ids = list(
            ViewedRequest.objects.filter(
                user=user, 
                request_id__in=all_request_ids
            ).values_list('request_id', flat=True)
        )
        
        # –°—á–∏—Ç–∞–µ–º –Ω–µ–ø—Ä–æ—Å–º–æ—Ç—Ä–µ–Ω–Ω—ã–µ –∑–∞—è–≤–∫–∏
        unviewed_count = len(all_request_ids) - len(viewed_request_ids)
        
        # üîπ –ü–û–õ–£–ß–ê–ï–ú –î–ê–ù–ù–´–ï –û –ù–û–í–´–• –ó–ê–Ø–í–ö–ê–•
        new_requests_data = []
        if unviewed_count > 0:
            # –ù–∞—Ö–æ–¥–∏–º –Ω–µ–ø—Ä–æ—Å–º–æ—Ç—Ä–µ–Ω–Ω—ã–µ –∑–∞—è–≤–∫–∏
            unviewed_requests = all_requests.exclude(id__in=viewed_request_ids)
            
            for req in unviewed_requests:
                new_requests_data.append({
                    'id': req.id,
                    'company_name': req.client.company_name,
                    'object_type': req.object_type,
                    'object_address': req.object_address or '–ù–µ —É–∫–∞–∑–∞–Ω',
                    'area': str(req.area) if req.area else '–ù–µ —É–∫–∞–∑–∞–Ω–∞',
                    'status': req.status,
                    'status_display': req.get_status_display(),
                    'created_at': req.created_at.strftime('%d.%m.%Y %H:%M'),
                    'has_file': bool(req.attached_file),
                    'description': req.description or '',
                    'responsible_manager': req.responsible_manager.user.get_full_name() if req.responsible_manager else None,
                    'client_contact': req.client.contact_person or '–ù–µ —É–∫–∞–∑–∞–Ω',
                    'client_email': req.client.email or '–ù–µ —É–∫–∞–∑–∞–Ω',
                })
        
        # –î–ª—è –æ—Ç–ª–∞–¥–∫–∏
        print(f"üìä –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–µ–ø—Ä–æ—Å–º–æ—Ç—Ä–µ–Ω–Ω—ã—Ö –∑–∞—è–≤–æ–∫ –¥–ª—è {user.username}:")
        print(f"   - –í—Å–µ–≥–æ –∑–∞—è–≤–æ–∫: {len(all_request_ids)}")
        print(f"   - –ü—Ä–æ—Å–º–æ—Ç—Ä–µ–Ω–Ω—ã—Ö: {len(viewed_request_ids)}")
        print(f"   - –ù–µ–ø—Ä–æ—Å–º–æ—Ç—Ä–µ–Ω–Ω—ã—Ö: {unviewed_count}")
        print(f"   - –ù–æ–≤—ã—Ö –∑–∞—è–≤–æ–∫ –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è: {len(new_requests_data)}")
        
        response_data = {
            'all_requests_count': len(all_request_ids),
            'unviewed_requests_count': unviewed_count,
            'viewed_requests_count': len(viewed_request_ids),
            'new_requests': new_requests_data,
            'last_check': timezone.now().isoformat(),
            'status': 'success',
            'user': user.username,
            'profile_role': profile.role
        }
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –≤ check_new_requests: {e}")
        response_data = {
            'unviewed_requests_count': 0,
            'all_requests_count': 0,
            'new_requests': [],
            'last_check': timezone.now().isoformat(),
            'status': 'error',
            'error': str(e)
        }
    
    return JsonResponse(response_data)

@login_required
def mark_request_as_viewed(request, pk=None):
    """–û—Ç–º–µ—á–∞–µ—Ç –∑–∞—è–≤–∫—É –∏–ª–∏ –≤—Å–µ –∑–∞—è–≤–∫–∏ –∫–∞–∫ –ø—Ä–æ—Å–º–æ—Ç—Ä–µ–Ω–Ω—ã–µ"""
    try:
        user = request.user
        
        if pk:
            # –û—Ç–º–µ—á–∞–µ–º –æ–¥–Ω—É –∑–∞—è–≤–∫—É
            req = get_object_or_404(Request, pk=pk)
            ViewedRequest.objects.get_or_create(user=user, request=req)
            
            return JsonResponse({
                'status': 'success',
                'message': f'–ó–∞—è–≤–∫–∞ #{req.id} –æ—Ç–º–µ—á–µ–Ω–∞ –∫–∞–∫ –ø—Ä–æ—Å–º–æ—Ç—Ä–µ–Ω–Ω–∞—è'
            })
        else:
            # –û—Ç–º–µ—á–∞–µ–º –í–°–ï –∑–∞—è–≤–∫–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
            profile = getattr(user, 'managerprofile', None)
            if not profile:
                return JsonResponse({
                    'status': 'error',
                    'error': 'User has no manager profile'
                })
            
            # –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ –∑–∞—è–≤–∫–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
            if profile.role == 'owner':
                user_requests = Request.objects.all()
            else:
                user_requests = Request.objects.filter(responsible_manager=profile)
            
            # –°–æ–∑–¥–∞–µ–º –∑–∞–ø–∏—Å–∏ –æ –ø—Ä–æ—Å–º–æ—Ç—Ä–µ –¥–ª—è –≤—Å–µ—Ö –∑–∞—è–≤–æ–∫
            viewed_count = 0
            for req in user_requests:
                ViewedRequest.objects.get_or_create(user=user, request=req)
                viewed_count += 1
            
            return JsonResponse({
                'status': 'success',
                'message': f'–í—Å–µ –∑–∞—è–≤–∫–∏ ({viewed_count} —à—Ç.) –æ—Ç–º–µ—á–µ–Ω—ã –∫–∞–∫ –ø—Ä–æ—Å–º–æ—Ç—Ä–µ–Ω–Ω—ã–µ',
                'viewed_count': viewed_count
            })
        
    except Exception as e:
        return JsonResponse({
            'status': 'error',
            'error': str(e)
        })

# ============================================================
# üì• –°–∫–∞—á–∏–≤–∞–Ω–∏–µ —Ñ–∞–π–ª–æ–≤
# ============================================================
@login_required
def download_request_file(request, pk):
    req = get_object_or_404(Request, pk=pk)
    if req.attached_file:
        response = FileResponse(req.attached_file.open(), as_attachment=True)
        response['Content-Disposition'] = f'attachment; filename="{req.attached_file.name}"'
        return response
    else:
        raise Http404("–§–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω")

@login_required
def download_request_file(request, pk):
    """–°–∫–∞—á–∏–≤–∞–Ω–∏–µ —Ñ–∞–π–ª–∞ –∑–∞—è–≤–∫–∏"""
    req = get_object_or_404(Request, pk=pk)
    
    if not req.attached_file:
        raise Http404("–§–∞–π–ª –Ω–µ –ø—Ä–∏–∫—Ä–µ–ø–ª–µ–Ω –∫ –∑–∞—è–≤–∫–µ")
    
    try:
        # –ü–æ–ª–Ω—ã–π –ø—É—Ç—å –∫ —Ñ–∞–π–ª—É
        file_path = os.path.join(settings.MEDIA_ROOT, req.attached_file.name)
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏–µ —Ñ–∞–π–ª–∞
        if not os.path.exists(file_path):
            raise Http404("–§–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ")
        
        # –û—Ç–∫—Ä—ã–≤–∞–µ–º —Ñ–∞–π–ª –≤ –±–∏–Ω–∞—Ä–Ω–æ–º —Ä–µ–∂–∏–º–µ
        file = open(file_path, 'rb')
        
        # –ü–æ–ª—É—á–∞–µ–º –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω–æ–µ –∏–º—è —Ñ–∞–π–ª–∞
        filename = os.path.basename(req.attached_file.name)
        
        # –°–æ–∑–¥–∞–µ–º response
        response = FileResponse(file, as_attachment=True, filename=filename)
        response['Content-Type'] = 'application/octet-stream'
        
        return response
        
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–∫–∞—á–∏–≤–∞–Ω–∏–∏ —Ñ–∞–π–ª–∞: {e}")
        raise Http404("–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Ñ–∞–π–ª–∞")
    
@login_required
@user_passes_test(is_owner)
def assign_manager(request, pk):
    """–ù–∞–∑–Ω–∞—á–µ–Ω–∏–µ –º–µ–Ω–µ–¥–∂–µ—Ä–∞ –Ω–∞ –∑–∞—è–≤–∫—É (—Ç–æ–ª—å–∫–æ –≤–ª–∞–¥–µ–ª–µ—Ü)."""
    req = get_object_or_404(Request, pk=pk)

    if request.method == "POST":
        manager_id = request.POST.get("manager_id")
        if not manager_id:
            messages.error(request, "–ù–µ –≤—ã–±—Ä–∞–Ω –º–µ–Ω–µ–¥–∂–µ—Ä.")
            return redirect("crm_request_detail", pk=req.pk)

        manager_profile = get_object_or_404(ManagerProfile, pk=manager_id)
        req.responsible_manager = manager_profile
        req.status = "in_progress"
        req.save(update_fields=["responsible_manager", "status"])

        _notify_manager_assignment(req)
        messages.success(
            request,
            f"–ú–µ–Ω–µ–¥–∂–µ—Ä {manager_profile.user.get_full_name() or manager_profile.user.username} –Ω–∞–∑–Ω–∞—á–µ–Ω."
        )
        return redirect("crm_request_detail", pk=req.pk)

    managers = ManagerProfile.objects.filter(role="manager").select_related("user")
    return render(request, "crm/assign_manager.html", {
        'user': request.user,
        'profile': request.user.managerprofile,
        "req": req, 
        "managers": managers
    })

def get_unviewed_requests_count(request):
    """–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –Ω–µ–ø—Ä–æ—Å–º–æ—Ç—Ä–µ–Ω–Ω—ã—Ö –∑–∞—è–≤–æ–∫ –¥–ª—è —Ç–µ–∫—É—â–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"""
    try:
        user = request.user
        profile = getattr(user, 'managerprofile', None)
        
        if not profile:
            return JsonResponse({
                'unviewed_count': 0,
                'status': 'error',
                'error': 'No manager profile'
            })
        
        # –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ ID –∑–∞—è–≤–æ–∫
        if profile.role == 'owner':
            all_request_ids = list(Request.objects.values_list('id', flat=True))
        else:
            all_request_ids = list(Request.objects.filter(
                responsible_manager=profile
            ).values_list('id', flat=True))
        
        # –ó–¥–µ—Å—å –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –ª–æ–≥–∏–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –ø—Ä–æ—Å–º–æ—Ç—Ä–µ–Ω–Ω—ã—Ö –∑–∞—è–≤–æ–∫ –∏–∑ localStorage
        # –ù–æ –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ –º—ã –Ω–µ –∑–Ω–∞–µ–º, –∫–∞–∫–∏–µ –∑–∞—è–≤–∫–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –ø—Ä–æ—Å–º–æ—Ç—Ä–µ–ª
        # –ü–æ—ç—Ç–æ–º—É –≤—Ä–µ–º–µ–Ω–Ω–æ –≤–æ–∑–≤—Ä–∞—â–∞–µ–º 0
        
        unviewed_count = 0  # –í—Ä–µ–º–µ–Ω–Ω–æ
        
        return JsonResponse({
            'unviewed_count': unviewed_count,
            'total_requests': len(all_request_ids),
            'status': 'success'
        })
        
    except Exception as e:
        return JsonResponse({
            'unviewed_count': 0,
            'status': 'error',
            'error': str(e)
        })